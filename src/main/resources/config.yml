# ----------------------------------------------------------------
# MySQL Storage - This is very helpful when storing player data that is constantly being acced.
#   Currently MySQL storage will only be used to store player standing for "The Collector"
# Disabled By Default
# ----------------------------------------------------------------

MySQL:
    Enable: false
    Host: "localhost"
    Port: 3306
    Database: "minecraft"
    Username: "root"
    Password: ""
    useSSL: false

# ----------------------------------------------------------------
# Price Scaling - Tax, Scalar, and Multiplier settings.
#
# [QuantityScalar] will be the aproximate price of an item if there is only one left in the shop
#       Prices are proportional to 1/quantity, so with 10x more of an item, it costs 1/10th as much
# [Multipliers] are applied only when BUYING items and make specific items cost more to buy
#       IE: any item that requires crafting will have its final price multiplied by the crafting Multiplier
#       for every craft that went into it.
#       Adding in custom modifiers is possible if you want, but do not remove default ones.
# [Algorithm] is any math expression with the placeholders {amount} and {scalar}. This will determine how prices
#       are prices are calculated in the market. Algorithm accepts any basic JavaScript expression
# ----------------------------------------------------------------

# Examples:
# ((1 / {amount}) * {scalar}) * 10
# (1 / (Math.log({amount}) / Math.log(2))) * 1.5 * {scalar}
# 1/{amount} * Math.sqrt({amount} + {scalar}) * {scalar}
Algorithm: 1/{amount} * Math.sqrt({amount} + {scalar}) * {scalar}

# Default: 5000
QuantityScalar: 4000

# Default: 1.3
Tax: 2.0

# Default: 1.0 - DO NOT CHANGE unless you know what you're doing!
EasyAdjustment: 1.0

Multipliers:
    # Default: 1.15
    Crafting: 1.15
    # Default: 1.12
    Smelting: 1.12
    # Default: 1.10
    Growing: 1.10

# ----------------------------------------------------------------
# The Collector - This can be anything you want it to be. This is used to allow players to sell their items
#   back to the server with some kind of tax induced. There is also a "standing" system to reward players
#   with less heavily taxed selling profits.
# Usage: /market collector <player> - To open GUI
# ----------------------------------------------------------------

TheCollector:
    # Default: true
    Enabled: true
    # Default: 60 - This is the base/lowest amount a player can be taxed for selling items (% players receive)
    Tax: 60.0
    Standing:
        # Default: false - If you plan on turning this on, You need to make sure MySQL is also enabled
        Enabled: false

# ----------------------------------------------------------------
# Blacklist certain items from the /buy, /sell, and 'The Collector'. Use this if you plan on giving
# players access to the buy command (Ops cannot bypass this).
# Ex: apple, diamond, book, crafting_table
# Use "craftables" to blacklist all items that have recipes
# ----------------------------------------------------------------
Item-Blacklist: []

# Debugging Settings
Debug: false